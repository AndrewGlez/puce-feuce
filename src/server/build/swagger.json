{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"mongoose.Types.ObjectId": {
				"type": "string"
			},
			"Usuario": {
				"properties": {
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"correo": {
						"type": "string"
					},
					"contraseña": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"correo",
					"contraseña"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_Usuario.Exclude_keyofUsuario._id-or-createdAt-or-updatedAt__": {
				"properties": {
					"correo": {
						"type": "string"
					},
					"contraseña": {
						"type": "string"
					}
				},
				"required": [
					"correo",
					"contraseña"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Usuario._id-or-createdAt-or-updatedAt_": {
				"$ref": "#/components/schemas/Pick_Usuario.Exclude_keyofUsuario._id-or-createdAt-or-updatedAt__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"UsuarioCreationParams": {
				"$ref": "#/components/schemas/Omit_Usuario._id-or-createdAt-or-updatedAt_"
			},
			"Partial_UsuarioCreationParams_": {
				"properties": {
					"correo": {
						"type": "string"
					},
					"contraseña": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Eventos": {
				"properties": {
					"_id": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"titulo": {
						"type": "string"
					},
					"descripcion": {
						"type": "string"
					},
					"fecha_inicio": {
						"type": "string",
						"format": "date-time"
					},
					"fecha_fin": {
						"type": "string",
						"format": "date-time"
					},
					"tipo_evento": {
						"type": "string"
					},
					"enlace": {
						"type": "string"
					},
					"ubicacion": {
						"type": "string"
					},
					"organizador": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"participantes": {
						"items": {
							"$ref": "#/components/schemas/mongoose.Types.ObjectId"
						},
						"type": "array"
					},
					"estado": {
						"type": "string",
						"enum": [
							"activo",
							"cancelado",
							"finalizado"
						]
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"titulo",
					"descripcion",
					"fecha_inicio",
					"tipo_evento",
					"enlace",
					"estado"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_Eventos.Exclude_keyofEventos._id-or-createdAt-or-updatedAt__": {
				"properties": {
					"titulo": {
						"type": "string"
					},
					"descripcion": {
						"type": "string"
					},
					"fecha_inicio": {
						"type": "string",
						"format": "date-time"
					},
					"fecha_fin": {
						"type": "string",
						"format": "date-time"
					},
					"tipo_evento": {
						"type": "string"
					},
					"enlace": {
						"type": "string"
					},
					"ubicacion": {
						"type": "string"
					},
					"organizador": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"participantes": {
						"items": {
							"$ref": "#/components/schemas/mongoose.Types.ObjectId"
						},
						"type": "array"
					},
					"estado": {
						"type": "string",
						"enum": [
							"activo",
							"cancelado",
							"finalizado"
						]
					}
				},
				"required": [
					"titulo",
					"descripcion",
					"fecha_inicio",
					"tipo_evento",
					"enlace",
					"estado"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Eventos._id-or-createdAt-or-updatedAt_": {
				"$ref": "#/components/schemas/Pick_Eventos.Exclude_keyofEventos._id-or-createdAt-or-updatedAt__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"EventoCreationParams": {
				"$ref": "#/components/schemas/Omit_Eventos._id-or-createdAt-or-updatedAt_"
			},
			"Partial_EventoCreationParams_": {
				"properties": {
					"titulo": {
						"type": "string"
					},
					"descripcion": {
						"type": "string"
					},
					"fecha_inicio": {
						"type": "string",
						"format": "date-time"
					},
					"fecha_fin": {
						"type": "string",
						"format": "date-time"
					},
					"tipo_evento": {
						"type": "string"
					},
					"enlace": {
						"type": "string"
					},
					"ubicacion": {
						"type": "string"
					},
					"organizador": {
						"$ref": "#/components/schemas/mongoose.Types.ObjectId"
					},
					"participantes": {
						"items": {
							"$ref": "#/components/schemas/mongoose.Types.ObjectId"
						},
						"type": "array"
					},
					"estado": {
						"type": "string",
						"enum": [
							"activo",
							"cancelado",
							"finalizado"
						]
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "puce-feuce",
		"version": "0.0.0",
		"contact": {}
	},
	"paths": {
		"/usuarios/{usuarioId}": {
			"get": {
				"operationId": "GetUsuario",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Usuario"
										}
									],
									"nullable": true
								}
							}
						}
					},
					"404": {
						"description": "Usuario not found"
					}
				},
				"tags": [
					"Usuarios"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "usuarioId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "correo",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateUsuario",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Usuario"
										}
									],
									"nullable": true
								}
							}
						}
					},
					"404": {
						"description": "Usuario not found"
					}
				},
				"tags": [
					"Usuarios"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "usuarioId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_UsuarioCreationParams_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteUsuario",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"success"
									],
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "Usuario not found"
					}
				},
				"tags": [
					"Usuarios"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "usuarioId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/usuarios": {
			"get": {
				"operationId": "GetUsuarios",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Usuario"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Usuarios"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateUsuario",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Usuario"
								}
							}
						}
					}
				},
				"tags": [
					"Usuarios"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UsuarioCreationParams"
							}
						}
					}
				}
			}
		},
		"/eventos/{eventoId}": {
			"get": {
				"operationId": "GetEvento",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Eventos"
										}
									],
									"nullable": true
								}
							}
						}
					},
					"404": {
						"description": "Evento not found"
					}
				},
				"tags": [
					"Eventos"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "eventoId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "titulo",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateEvento",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Eventos"
										}
									],
									"nullable": true
								}
							}
						}
					},
					"404": {
						"description": "Evento not found"
					}
				},
				"tags": [
					"Eventos"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "eventoId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_EventoCreationParams_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteEvento",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"success": {
											"type": "boolean"
										}
									},
									"required": [
										"success"
									],
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "Evento not found"
					}
				},
				"tags": [
					"Eventos"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "eventoId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/eventos": {
			"get": {
				"operationId": "GetEventos",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Eventos"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Eventos"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "tipo_evento",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "estado",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "fecha_desde",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "fecha_hasta",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateEvento",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Eventos"
								}
							}
						}
					}
				},
				"tags": [
					"Eventos"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EventoCreationParams"
							}
						}
					}
				}
			}
		},
		"/eventos/{eventoId}/participantes/{participanteId}": {
			"post": {
				"operationId": "AddParticipante",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Eventos"
										}
									],
									"nullable": true
								}
							}
						}
					},
					"404": {
						"description": "Evento or participant not found"
					}
				},
				"tags": [
					"Eventos"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "eventoId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "participanteId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "RemoveParticipante",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Eventos"
										}
									],
									"nullable": true
								}
							}
						}
					},
					"404": {
						"description": "Evento or participant not found"
					}
				},
				"tags": [
					"Eventos"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "eventoId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "participanteId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}